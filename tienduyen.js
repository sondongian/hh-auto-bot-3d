(async function autoBlessing() {
  const ACTION_URL = 'https://hoathinh3d.cam/wp-json/hh3d/v1/action';
  const DOMAIN = 'https://hoathinh3d.cam';

  const blessingMessages = [
    "üå∏ Duy√™n kh·ªüi t·ª´ t√¢m, ƒë·∫°o h·ª£p b·ªüi √Ω! Ch√∫c hai v·ªã ƒë·∫°o h·ªØu ƒë·ªìng h√†nh b·∫•t di·ªát, nh∆∞ gi√≥ xu√¢n th·ªïi m√£i, nh∆∞ s√≥ng bi·∫øc v·ªó ho√†i! üåä",
    "üåø T√¨nh th√¢m nh∆∞ su·ªëi ngu·ªìn, ƒë·∫°o b·ªÅn nh∆∞ n√∫i ƒë√°! Ch√∫c ph√∫c Song Tu vi√™n m√£n!",
    "üåü Mong hai ƒë·∫°o h·ªØu tay n·∫Øm tay v∆∞·ª£t qua v·∫°n ki·∫øp, ƒë·ªìng h√†nh mu√¥n ki·∫øp!",
    "üî• T√¨nh nh∆∞ l·ª≠a ƒë·ªè, ƒë·∫°o nh∆∞ trƒÉng r·∫±m. Nguy·ªán Song Tu k·∫øt th√†nh Thi√™n ƒê·∫°o!",
    "üåà Ch√∫c hai v·ªã lu√¥n h√≤a h·ª£p, t·ªèa s√°ng nh∆∞ v·∫ßng d∆∞∆°ng gi·ªØa tr·ªùi cao!",
    "‚ö°Ô∏è M·ªôt b∆∞·ªõc nh·∫≠p ƒë·∫°o, v·∫°n ki·∫øp th√†nh ti√™n! Nguy·ªán hai v·ªã ƒë·∫°o h·ªØu n·∫Øm tay tu luy·ªán, ph√° v·ª° thi√™n ki·∫øp, c√πng nhau phi thƒÉng b·∫•t di·ªát! üïäÔ∏è",
    "üåü H·ªØu duy√™n thi√™n ƒë·ªãnh, nguy·ªát l√£o ch·ªâ ƒë∆∞·ªùng! Nguy·ªán ƒë·∫°o l·ªØ v·ªØng b·ªÅn, ƒë·ªìng t√¢m h·ª£p l·ª±c, tr∆∞·ªùng t·ªìn gi·ªØa tr·ªùi ƒë·∫•t bao la! üíû",
    "üåø Tr·∫£i qua ng√†n ki·∫øp lu√¢n h·ªìi, cu·ªëi c√πng t∆∞∆°ng ng·ªô! Nguy·ªán hai v·ªã ƒë·∫°o h·ªØu t√¢m √Ω t∆∞∆°ng th√¥ng, ƒë·ªìng tu ƒë·ªìng ti·∫øn, ch·ª©ng ƒë·∫Øc ƒë·∫°i ƒë·∫°o ‚öîÔ∏è!",
    "üå† Thi√™n duy√™n v·∫°n ki·∫øp, h·ªôi ng·ªô gi·ªØa h·ªìng tr·∫ßn! Nguy·ªán hai v·ªã ƒë·∫°o h·ªØu ƒë·ªìng t√¢m tu luy·ªán, phi thƒÉng c·ª≠u thi√™n, tr∆∞·ªùng t·ªìn c√πng nh·∫≠t nguy·ªát! ‚ú®",
    "üèØ ƒê·∫°o t√¨nh nh∆∞ trƒÉng s√°ng, chi·∫øu r·ªçi m√£i kh√¥ng phai! Ch√∫c hai v·ªã ƒë·∫°o h·ªØu tu h√†nh vi√™n m√£n, b∆∞·ªõc l√™n ƒë√†i sen, h√≥a th√†nh ch√¢n ti√™n! üèπ",
    "üå∫ Nh√¢n sinh h·ªØu h·∫πn, tu h√†nh h·ªØu duy√™n! Nguy·ªán hai v·ªã ƒë·∫°o h·ªØu song tu h√≤a h·ª£p, c√πng nhau v∆∞·ª£t thi√™n ƒë·ªãa, l∆∞u danh b·∫•t h·ªß! üèîÔ∏è",
    "‚ú® M·ªôt √°nh m·∫Øt giao h√≤a, v·∫°n nƒÉm ch·∫≥ng ƒë·ªïi! Nguy·ªán hai v·ªã ƒë·∫°o h·ªØu ƒë·ªìng t√¢m song ti·∫øn, ƒë·∫°o nghi·ªáp r·∫°ng r·ª°, tu th√†nh ch√≠nh qu·∫£! üöÄ",
    "üî• ƒê·∫°o t√¢m ki√™n ƒë·ªãnh, tay n·∫Øm ch·∫∑t ch·∫≥ng r·ªùi! Ch√∫c hai v·ªã ƒë·∫°o h·ªØu v∆∞·ª£t qua mu√¥n v√†n th·ª≠ th√°ch, c√πng nhau ƒëƒÉng ƒë·ªânh c·ª≠u thi√™n! üåà",
    "üåå ƒê·ªãnh m·ªánh an b√†i, thi√™n ƒë·ªãa ch·ª©ng gi√°m! Nguy·ªán hai v·ªã ƒë·∫°o h·ªØu tu luy·ªán ƒë·∫°i th√†nh, n·∫Øm gi·ªØ ch√¢n l√Ω, m√£i m√£i b√™n nhau! üèÜ"
  ];

  // --- UI Th√¥ng b√°o ---
  function ensureNotificationContainer() {
    if (!document.getElementById('auto-blessing-notification-container')) {
      const container = document.createElement('div');
      container.id = 'auto-blessing-notification-container';
      Object.assign(container.style, {
        position: 'fixed',
        top: '20px',
        right: '20px',
        zIndex: 99999,
        display: 'flex',
        flexDirection: 'column',
        gap: '8px',
        maxWidth: '300px',
        fontFamily: 'Poppins, sans-serif'
      });
      document.body.appendChild(container);
    }
  }

  function showNotificationUI(message, type = "success") {
    ensureNotificationContainer();
    const container = document.getElementById('auto-blessing-notification-container');
    const notification = document.createElement('div');
    Object.assign(notification.style, {
      padding: '10px 15px',
      borderRadius: '8px',
      color: '#fff',
      backgroundColor: type === "success" ? '#4caf50' : '#f44336',
      boxShadow: '0 2px 8px rgba(0,0,0,0.2)',
      animation: 'fadein 0.5s, fadeout 0.5s 2.5s',
    });
    notification.textContent = message;
    container.appendChild(notification);

    setTimeout(() => {
      notification.remove();
    }, 3000);
  }

  // --- X·ª≠ l√Ω ch√≠nh ---
  try {
    const weddingRes = await fetch(ACTION_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-WP-Nonce': window?.Better_Messages?.nonce || ''
      },
      body: JSON.stringify({ action: 'show_all_wedding' })
    });

    const weddingData = await weddingRes.json();
    const rooms = weddingData?.data || [];

    const unblessedRooms = rooms.filter(r => !r.has_blessed);

    if (!unblessedRooms.length) {
      console.log("‚úÖ T·∫•t c·∫£ c√°c ph√≤ng ƒë√£ ch√∫c ph√∫c h√¥m nay.");
      showNotificationUI("‚úÖ T·∫•t c·∫£ c√°c ph√≤ng ƒë√£ ch√∫c ph√∫c h√¥m nay.", "success");
      return;
    }

    for (const room of unblessedRooms) {
      const roomId = room.wedding_room_id;
      console.log(`üí† ƒêang x·ª≠ l√Ω ph√≤ng ${roomId}...`);
      showNotificationUI(`üí† ƒêang x·ª≠ l√Ω ph√≤ng ${roomId}...`, "info");

      const pageRes = await fetch(`${DOMAIN}/phong-cuoi?id=${roomId}`);
      const pageHtml = await pageRes.text();
      const nonceMatch = pageHtml.match(/const\s+rest_nonce\s*=\s*['"]([^'"]+)['"]/);
      const nonce = nonceMatch?.[1];

      if (!nonce) {
        console.warn(`‚ùå Kh√¥ng t√¨m th·∫•y nonce cho ph√≤ng ${roomId}`);
        showNotificationUI(`‚ùå Kh√¥ng t√¨m th·∫•y nonce cho ph√≤ng ${roomId}`, "error");
        continue;
      }

      const blessing = blessingMessages[Math.floor(Math.random() * blessingMessages.length)];

      const blessRes = await fetch(ACTION_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-WP-Nonce': nonce
        },
        body: JSON.stringify({
          action: 'hh3d_add_blessing',
          wedding_room_id: roomId,
          message: blessing
        })
      });

      const blessData = await blessRes.json();

      if (blessData.success) {
        console.log(`üéâ Ph√≤ng ${roomId}: Ch√∫c ph√∫c th√†nh c√¥ng ‚Üí "${blessing}"`);
        showNotificationUI(`üéâ Ph√≤ng ${roomId}: Ch√∫c ph√∫c th√†nh c√¥ng!`, "success");
      } else {
        console.warn(`‚ö†Ô∏è Ph√≤ng ${roomId}: ${blessData.message || 'L·ªói kh√¥ng r√µ'}`);
        showNotificationUI(`‚ö†Ô∏è Ph√≤ng ${roomId}: ${blessData.message || 'L·ªói kh√¥ng r√µ'}`, "error");
      }

      await new Promise(r => setTimeout(r, 1000));
    }
  } catch (error) {
    console.error("‚ùå L·ªói t·ªïng:", error);
    showNotificationUI(`‚ùå L·ªói t·ªïng: ${error.message}`, "error");
  }
})();
