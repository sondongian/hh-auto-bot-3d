// ðŸ“¦ Ultimate Secure Loader v3.0 - Full Anti-DevTools, Anti-Inspect, Self-Protect
(function() {
  const encoded = '';

  // ðŸ”’ Tá»± Ä‘á»™ng kiá»ƒm tra DevTools
  (function detectDevTools() {
    const threshold = 160;
    setInterval(() => {
      const widthThreshold = window.outerWidth - window.innerWidth > threshold;
      const heightThreshold = window.outerHeight - window.innerHeight > threshold;
      if (widthThreshold || heightThreshold) {
        console.clear();
        alert('ðŸš« HÃ nh Ä‘á»™ng bá»‹ cháº·n vÃ¬ phÃ¡t hiá»‡n Developer Tools!');
        window.location.reload();
      }
    }, 1000);
  })();

  // ðŸ”’ Cháº·n Chuá»™t pháº£i, F12, Ctrl+Shift+I, Ctrl+U
  document.addEventListener('contextmenu', e => e.preventDefault());
  document.addEventListener('keydown', e => {
    if (e.keyCode == 123 || // F12
        (e.ctrlKey && e.shiftKey && (e.keyCode == 73 || e.keyCode == 74)) || // Ctrl+Shift+I/J
        (e.ctrlKey && (e.keyCode == 85 || e.keyCode == 83))) { // Ctrl+U/Ctrl+S
      e.preventDefault();
      alert('ðŸš« KhÃ´ng Ä‘Æ°á»£c phÃ©p thao tÃ¡c!');
    }
  });

  // ðŸ”’ Ká»¹ thuáº­t console.dir + Image
  const element = new Image();
  Object.defineProperty(element, 'id', {
    get: function() {
      console.clear();
      alert('ðŸš« DevTools Ä‘ang má»Ÿ! Ngá»«ng hoáº¡t Ä‘á»™ng.');
      window.location.reload();
      throw new Error('DevTools Detected!');
    }
  });
  setInterval(function() {
    console.dir(element);
  }, 500);

  // ðŸ”¥ Decode Base64 vÃ  Inject mÃ£
  try {
    const decoded = atob(encoded);
    const script = document.createElement('script');
    script.textContent = decoded;
    document.body.appendChild(script);
  } catch (e) {
    console.clear();
    alert('ðŸš« Lá»—i mÃ£ hÃ³a dá»¯ liá»‡u. Tá»± Ä‘á»™ng dá»«ng.');
    window.location.reload();
  }
})();
